---
# file: roles/miniconda/tasks/main.yml

## Ensure target has all required resources

### Ensure target has a local resource directory

- name: "ensure for our miniconda resource directory"
  file:
    path : '{{ miniconda_resource_dir }}'
    state: directory
    mode : 0775

### Ensure target has a the targeted miniconda installler

- name: "Does user already have the miniconda installer available locally?"
  stat:
    path: '{{ miniconda_resource_dir }}/{{ miniconda_installer_sh }}'
  register: has_miniconda_installer

- name: "debug value of has_miniconda_installer"
  debug: var=has_miniconda_installer

### If not download the miniconda installer to the target system

- name: "download our target miniconda installer"
  get_url:
    url  : 'https://repo.continuum.io/miniconda/Miniconda2-4.3.11-Linux-x86_64.sh'
    dest : '{{ miniconda_resource_dir }}/{{ miniconda_installer_sh }}'
    checksum: 'md5:{{ miniconda_installer_sh_checksum }}'
    mode : 0755
  register : has_miniconda_installer # change value of {{ has_miniconda_installer }} now that it has been downloaded.
  when: '{{ has_miniconda_installer.stat.exists }} != true'

### Do we Have a conda been available locally?

- name: "do we have a previously installed version of miniconda?"
  stat:
    path: '{{ miniconda_home }}/bin/conda'
  register: has_bin_conda

- name: "debug value of has_bin_conda"
  debug: var=has_bin_conda

### If no miniconda then lets install it now.

- name: install miniconda
  shell: "{{ miniconda_resource_dir }}/{{ miniconda_installer_sh }} -b -p {{ miniconda_home }} creates={{ miniconda_home }} executable=/bin/bash"
  register: miniconda_installed
  when: '{{ has_bin_conda.stat.exists }} != true'

## Configuration

### Copy our condarc file

- name: "install base condarc"
  copy: src={{ item }} dest="~/.{{ item }}"
  with_items:
    - condarc
  when: miniconda_add_condarc

### add path to bash.rc

- name: add miniconda to the PATH
  lineinfile:
    dest: "{{ miniconda_rcfile }}"
    line: export PATH={{ miniconda_home }}/bin:$PATH
    state: present
  when: miniconda_modify_path

- name: "remove conda environments"
  shell: "rm -R {{ miniconda_home }}/envs"
  when: miniconda_envs_state == 'purge'

- name: "create environments"
  shell: "{{ miniconda_home }}/bin/conda create --yes -q -n {{ item.name }} python={{ item.python_version }} {{ item.pkgs }} creates={{ miniconda_home }}/envs/{{ item.name }}"
  when: miniconda_installed | success
  with_items: '{{ miniconda_environments }}'

- name: "update miniconda installation to latest versions"
  shell: "{{ miniconda_home }}/bin/conda update conda --yes -q executable=/bin/bash"



